# bump: tcl-version /TCL_VERSION="(.*)"/ https://sourceforge.net/projects/tcl/files/Tcl/|re:/Click.to.enter.([\d.]+)"/$1/|semver:*
TCL_VERSION="8.6.14"
TCL_VR=$(echo $TCL_VERSION | cut -d '.' -f 1,2)
TCL_VERSION_STRING="tcl-core${TCL_VERSION}-src"
export ZOPEN_CATEGORIES="language"

export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_STABLE_URL="https://sourceforge.net/projects/tcl/files/Tcl/${TCL_VERSION}/${TCL_VERSION_STRING}.tar.gz"
export ZOPEN_STABLE_DEPS="curl gzip make zoslib pkgconfig openssl patch"
export ZOPEN_CHECK="skip"
export ZOPEN_EXTRA_CPPFLAGS="-DNEED_FAKE_RFC2553=1"
export ZOPEN_EXTRA_CFLAGS="$ZOPEN_EXTRA_CPPFLAGS" 
export ZOPEN_SRC_DIR=unix
export ZOPEN_CHECK_OPTS='test'
export ZOPEN_COMP=CLANG
export ZOPEN_CONFIGURE_OPTS="--prefix=\$ZOPEN_INSTALL_DIR"
export ZOPEN_NAME="tcl"
export ZOPEN_INSTALL="zopen_install"

zopen_init()
{
  unset TCL_LIBRARY
}

zopen_post_install()
{
  curr_dir="$(pwd)"
  
  found=0
  for dir in tcltls*/; do
      [ -d "$dir" ] && found=1 && break
  done
  
  if [ "$found" -eq 0 ]; then
      echo "Directory not found, downloading and extracting..."
      curl -L -o tcltls.tar.gz https://core.tcl-lang.org/tcltls/tarball/e03e54ee87/tcltls-e03e54ee87.tar.gz
      tar -xvzf tcltls.tar.gz
      rm -f tcltls.tar.gz
      patch_needed=1
  fi
  
  for dir in tcltls*/; do
      [ -d "$dir" ] && cd "$dir" && break
  done
  
  if [ "$patch_needed" = "1" ]; then
      patch -p1 < "${ZOPEN_ROOT}/tcltls.patch"
  fi
  
  if [ ! -f config.status ]; then
      ./configure --prefix="$ZOPEN_INSTALL_DIR" --disable-shared \
        --with-openssl-dir="$OPENSSL_HOME" \
        --with-openssl-includedir="$OPENSSL_HOME/include" \
        --with-openssl-libdir="$OPENSSL_HOME/lib" \
        --with-openssl-pkgconfig="$OPENSSL_HOME/lib/pkgconfig"
  fi
  
  make install
  
  cd "$curr_dir"
}

zopen_install()
{
  make install
  make install-private-headers
}

zopen_append_to_env() 
{
cat <<EOF
export TCL_LIBRARY="\$PWD/lib/tcl${TCL_VR}"
EOF
}

zopen_check_results()
{
  return 3 # non-functional
}

zopen_get_version()
{
  echo 'puts [info patchlevel];exit 0' | ./tclsh
}
